string_len.lua:[3:11-3:26]: Prefer `#` over string.len [stdlib:string-len]
   │
 3 │ local _ = string.len "foo"
   │           ^^^^^^^^^^^^^^^^
string_len.lua:[4:11-4:27]: Prefer `#` over string.len [stdlib:string-len]
   │
 4 │ local _ = string.len("foo") -- Basic application
   │           ^^^^^^^^^^^^^^^^^
string_len.lua:[5:11-5:36]: Prefer `#` over string.len [stdlib:string-len]
   │
 5 │ local _ = string.len("foo" .. "bar") -- Needs parens
   │           ^^^^^^^^^^^^^^^^^^^^^^^^^^
string_len.lua:[6:11-6:34]: Prefer `#` over string.len [stdlib:string-len]
   │
 6 │ local _ = string.len("foo", "bar") -- Warns, but no change
   │           ^^^^^^^^^^^^^^^^^^^^^^^^
string_len.lua:[9:11-9:29]: Prefer `#` over string.len [stdlib:string-len]
   │
 9 │ local _ = string.len( "foo" )
   │           ^^^^^^^^^^^^^^^^^^^
string_len.lua:[10:11-10:29]: Prefer `#` over string.len [stdlib:string-len]
    │
 10 │ local _ = string.len( "foo" ) + 2
    │           ^^^^^^^^^^^^^^^^^^^
No errors and 6 warnings
 -- config: (lint (only stdlib:string-len))
 
-local _ = string.len "foo"
-local _ = string.len("foo") -- Basic application
-local _ = string.len("foo" .. "bar") -- Needs parens
+local _ = #"foo"
+local _ = #"foo" -- Basic application
+local _ = #("foo" .. "bar") -- Needs parens
 local _ = string.len("foo", "bar") -- Warns, but no change
 
 -- Shouldn't insert double spaces.
-local _ = string.len( "foo" )
-local _ = string.len( "foo" ) + 2
+local _ = #"foo"
+local _ = #"foo" + 2
 
 -- All of these fine
 local _ = #"foo"
 local _ = string.lens("foo")
 local _ = strings.len("foo")
 
