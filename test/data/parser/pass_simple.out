{ Syntax.program =
  [(Syntax.Assign
      { Syntax.assign_vars =
        (Syntax.SepList1.Mono
           Syntax.NLookup {
             tbl =
             (Syntax.Ref
                (Syntax.NVar
                   (Syntax.Var
                      { Node.leading_trivia = [||]; trailing_trivia = [||];
                        contents = "test"; span = pass_simple.lua[1:1-1:4] })));
             open_k =
             { Node.leading_trivia = [||]; trailing_trivia = [||];
               contents = [; span = pass_simple.lua[1:5-1:5] };
             key =
             (Syntax.String
                { Node.leading_trivia = [||]; trailing_trivia = [||];
                  contents = "\"return\""; span = pass_simple.lua[1:6-1:13] });
             close_k =
             { Node.leading_trivia = [||]; trailing_trivia = [|Trivia(" ")|];
               contents = ]; span = pass_simple.lua[1:14-1:14] }});
        assign_eq =
        { Node.leading_trivia = [||]; trailing_trivia = [|Trivia(" ")|];
          contents = =; span = pass_simple.lua[1:16-1:16] };
        assign_vals =
        (Syntax.SepList1.Mono
           (Syntax.Ref
              Syntax.NDot {
                tbl =
                (Syntax.Ref
                   (Syntax.NVar
                      (Syntax.Var
                         { Node.leading_trivia = [||];
                           trailing_trivia = [||]; contents = "test";
                           span = pass_simple.lua[1:18-1:21] })));
                dot =
                { Node.leading_trivia = [||]; trailing_trivia = [||];
                  contents = .; span = pass_simple.lua[1:22-1:22] };
                key =
                { Node.leading_trivia = [||];
                  trailing_trivia =
                  [|Trivia(" "); Trivia("--- @local"); Trivia("\n")|];
                  contents = "enter"; span = pass_simple.lua[1:23-1:27] }}))
        })
    ];
  eof =
  { Node.leading_trivia = [||]; trailing_trivia = [||];
    contents = end of file; span = pass_simple.lua[2:1-2:1] }
  }