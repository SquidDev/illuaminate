bracket_space.lua: Inconsistent spacing [format:bracket-space]
   │
 3 │ print(1 ) print( 1) local _ = print(1 )
   │      ^^^^
No space after the opening bracket, but spaces before the closing one.

bracket_space.lua: Inconsistent spacing [format:bracket-space]
   │
 3 │ print(1 ) print( 1) local _ = print(1 )
   │                ^^^^
Spaces after the opening bracket, but no spaces before the closing one.

bracket_space.lua: Inconsistent spacing [format:bracket-space]
   │
 3 │ print(1 ) print( 1) local _ = print(1 )
   │                                    ^^^^
No space after the opening bracket, but spaces before the closing one.

bracket_space.lua: Inconsistent spacing [format:bracket-space]
   │
 4 │ local _ = ( 1), (1 )
   │           ^^^^
Spaces after the opening bracket, but no spaces before the closing one.

bracket_space.lua: Inconsistent spacing [format:bracket-space]
   │
 4 │ local _ = ( 1), (1 )
   │                 ^^^^
No space after the opening bracket, but spaces before the closing one.

bracket_space.lua: Inconsistent spacing [format:bracket-space]
   │
 5 │ local _ = { 1}, {1 }
   │           ^^^^
Spaces after the opening bracket, but no spaces before the closing one.

bracket_space.lua: Inconsistent spacing [format:bracket-space]
   │
 5 │ local _ = { 1}, {1 }
   │                 ^^^^
No space after the opening bracket, but spaces before the closing one.

bracket_space.lua: Inconsistent spacing [format:bracket-space]
   │
 6 │ local _ = { [1 ] = true }, { [ 1] = true }
   │             ^^^^
No space after the opening bracket, but spaces before the closing one.

bracket_space.lua: Inconsistent spacing [format:bracket-space]
   │
 6 │ local _ = { [1 ] = true }, { [ 1] = true }
   │                              ^^^^
Spaces after the opening bracket, but no spaces before the closing one.

bracket_space.lua: Inconsistent spacing [format:bracket-space]
   │
 7 │ local _ = x[1 ], x[ 1]
   │            ^^^^
No space after the opening bracket, but spaces before the closing one.

bracket_space.lua: Inconsistent spacing [format:bracket-space]
   │
 7 │ local _ = x[1 ], x[ 1]
   │                   ^^^^
Spaces after the opening bracket, but no spaces before the closing one.

bracket_space.lua: Inconsistent spacing [format:bracket-space]
   │
 9 │ local function f( x) end
   │                 ^^^^
Spaces after the opening bracket, but no spaces before the closing one.

bracket_space.lua: Inconsistent spacing [format:bracket-space]
    │
 10 │ local function f(x ) end
    │                 ^^^^
No space after the opening bracket, but spaces before the closing one.

bracket_space.lua: Inconsistent spacing [format:bracket-space]
    │
 12 │ function f( x) end
    │           ^^^^
Spaces after the opening bracket, but no spaces before the closing one.

bracket_space.lua: Inconsistent spacing [format:bracket-space]
    │
 13 │ function f(x ) end
    │           ^^^^
No space after the opening bracket, but spaces before the closing one.

bracket_space.lua: Inconsistent spacing [format:bracket-space]
    │
 15 │ local f = function( x) end
    │                   ^^^^
Spaces after the opening bracket, but no spaces before the closing one.

bracket_space.lua: Inconsistent spacing [format:bracket-space]
    │
 16 │ local f = function(x ) end
    │                   ^^^^
No space after the opening bracket, but spaces before the closing one.
No errors and 17 warnings
 -- config: (lint (only format:bracket-space))
 
-print(1 ) print( 1) local _ = print(1 )
-local _ = ( 1), (1 )
-local _ = { 1}, {1 }
-local _ = { [1 ] = true }, { [ 1] = true }
-local _ = x[1 ], x[ 1]
-
-local function f( x) end
-local function f(x ) end
-
-function f( x) end
-function f(x ) end
-
-local f = function( x) end
-local f = function(x ) end
+print( 1 ) print( 1 ) local _ = print( 1 )
+local _ = ( 1 ), ( 1 )
+local _ = { 1 }, { 1 }
+local _ = { [ 1 ] = true }, { [ 1 ] = true }
+local _ = x[ 1 ], x[ 1 ]
 
+local function f( x ) end
+local function f( x ) end
+
+function f( x ) end
+function f( x ) end
+
+local f = function( x ) end
+local f = function( x ) end
+
